import React from 'react';
import { getProductBySlug } from '@/shared/api/products';
import { getCategories } from '@/shared/api/categories';
import { formatPrice } from '@/shared/lib/formatPrice';
import { ProductDetails } from '@/widgets/ProductDetails';
import { NEXT_PUBLIC_STATIC_URL } from "@/shared/config/api";
import { notFound } from 'next/navigation';
import type { Metadata } from 'next';
import type { Category, CategoriesApiResponse } from '@/shared/types/category';
import type { ProductFull, ProductSpecEnum } from '@/shared/types/product';

interface TovarPageParams {
  categoryName: string;
  subcategoryName: string;
  tovar: string;
}

interface TovarPageProps {
  params: Promise<TovarPageParams>;
}

// --- –•–µ–ª–ø–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ---
function getPrimaryImageUrl(productData: ProductFull): string {
    if (!productData) return '';

    let imageUrl = '';
    if (productData.image_logo) {
        imageUrl = `${NEXT_PUBLIC_STATIC_URL}${productData.image_logo}`;
    } else if (productData.models && productData.models[0]?.specEnums) {
        // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –º–æ–¥–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const defaultModelSpec = productData.models[0].specEnums.find(
            (spec: ProductSpecEnum) => spec.name === productData.defaultModel && spec.images?.[0]
        );
        if (defaultModelSpec?.images?.[0]) {
            imageUrl = `${NEXT_PUBLIC_STATIC_URL}${defaultModelSpec.images[0]}`;
        } else {
            // –ï—Å–ª–∏ —É –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π –º–æ–¥–µ–ª–∏ –Ω–µ—Ç, –±–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ specEnums
            const firstAvailableModelSpec = productData.models[0].specEnums.find(
                (spec: ProductSpecEnum) => spec.images?.[0]
            );
            if (firstAvailableModelSpec?.images?.[0]) {
                imageUrl = `${NEXT_PUBLIC_STATIC_URL}${firstAvailableModelSpec.images[0]}`;
            }
        }
    }
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å fallback –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    return imageUrl;
}

// --- –•–µ–ª–ø–µ—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π ---
function findCategories(
    categories: Category[] | undefined,
    categoryName: string,
    subcategoryName: string
): { parentCategory?: Category; subcategory?: Category } {
    if (!categories) {
        return {};
    }
    const parentCategory = categories.find(cat => cat.slug === categoryName);
    const isAllProducts = subcategoryName === categoryName; // –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ subcategoryName —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å categoryName
    const subcategory = !isAllProducts && parentCategory?.children
        ? parentCategory.children.find(sub => sub.slug === subcategoryName)
        : undefined;
    return { parentCategory, subcategory };
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –¥–ª—è –ø—Ä–æ–ø—Å–æ–≤ generateMetadata, –∫–∞–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ SO
type MetadataProps = {
  params: Promise<TovarPageParams>;
  // searchParams?: Promise<{ [key: string]: string | string[] | undefined }>; // –ï—Å–ª–∏ –Ω—É–∂–Ω—ã searchParams
};

export async function generateMetadata(props: MetadataProps): Promise<Metadata> {
    const { params } = props; // –ü–æ–ª—É—á–∞–µ–º Promise
    const awaitedParams = await params; // –û–∂–∏–¥–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è Promise
    const { categoryName, subcategoryName, tovar } = awaitedParams; // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    const [productData, categoriesData] = await Promise.all([
        getProductBySlug(tovar),
        getCategories()
    ]);

    if (!productData) {
        return {
            title: '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω',
            description: '–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Ç–æ–≤–∞—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'
        };
    }

    const { parentCategory, subcategory } = findCategories(categoriesData?.categories, categoryName, subcategoryName);

    const displayCategory = subcategory?.name ?? parentCategory?.name ?? '–º–∞–≥–∞–∑–∏–Ω–µ';
    const priceString = formatPrice(productData.price_discount || productData.price);
    const title = `–∫—É–ø–∏—Ç—å ${productData.name.toLowerCase()} –≤ ${displayCategory.toLowerCase()} panda wear | —Ü–µ–Ω–∞ ${priceString}`;
    const description = `${(productData.desc_short || `–∫—É–ø–∏—Ç—å ${productData.name}`).toLowerCase()} –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ panda wear. ‚úÖ –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π —Ä–æ—Å—Å–∏–∏. ‚≠ê –≥–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞. üí∞ –≤—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã. –∑–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å–µ–π—á–∞—Å!`;

    const ogImageUrl = getPrimaryImageUrl(productData);

    const canonicalUrl = `/category/${categoryName}/${subcategoryName}/${tovar}`;

    return {
        metadataBase: new URL('https://pandawear.ru'), // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ URL –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
        title,
        description,
        openGraph: {
            title,
            description,
            images: ogImageUrl ? [{ url: ogImageUrl }] : [],
            locale: 'ru_RU',
            type: 'website',
            url: canonicalUrl,
            siteName: 'panda wear', // –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã–Ω–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É
        },
        other: {
            'og:price:amount': String(productData.price_discount ?? productData.price), // –ò—Å–ø–æ–ª—å–∑—É–µ–º ?? –¥–ª—è –±–æ–ª—å—à–µ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
            'og:price:currency': 'RUB',
            'og:availability': productData.in_stock > 0 ? 'in stock' : 'out of stock',
        },
        alternates: {
            canonical: canonicalUrl,
        },
    };
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∏–ø –≤ TovarPage
export default async function TovarPage(props: TovarPageProps) {
    const { params } = props; // –ü–æ–ª—É—á–∞–µ–º Promise
    const awaitedParams = await params; // –û–∂–∏–¥–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è Promise
    const { categoryName, subcategoryName, tovar } = awaitedParams; // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    const [productData, categoriesData] = await Promise.all([
        getProductBySlug(tovar),
        getCategories()
    ]);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω
    if (!productData) {
        console.error(`[TovarPage] Product not found, calling notFound(). Slug: ${tovar}`); // –û—Å—Ç–∞–≤–∏–º console.error –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        notFound(); // –í—ã–∑–æ–≤ notFound() –ø—Ä–µ—Ä–≤–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∏ –ø–æ–∫–∞–∂–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É 404
    }

    // –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∏ –¥–æ—á–µ—Ä–Ω—é—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const { parentCategory, subcategory } = findCategories(categoriesData?.categories, categoryName, subcategoryName);

    // –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const primaryImageUrl = getPrimaryImageUrl(productData);

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö JSON-LD
    const structuredData = {
        "@context": "https://schema.org/",
        "@type": "Product",
        name: productData.name.toLowerCase(),
        image: primaryImageUrl, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        description: productData.desc_short ? productData.desc_short.toLowerCase() : '',
        sku: productData.article ? String(productData.article) : undefined, // SKU –æ–±—ã—á–Ω–æ —Å—Ç—Ä–æ–∫–∞
        brand: {
            "@type": "Brand",
            name: "panda wear" // –ú–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É
        },
        offers: {
            "@type": "Offer",
            url: `/category/${categoryName}/${subcategoryName}/${tovar}`, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            priceCurrency: "RUB",
            price: String(productData.price_discount ?? productData.price), // –ò—Å–ø–æ–ª—å–∑—É–µ–º ??
            priceValidUntil: new Date(new Date().setFullYear(new Date().getFullYear() + 1)).toISOString().split('T')[0], // –î–∞—Ç–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ü–µ–Ω—ã
            availability: productData.in_stock > 0 ? "https://schema.org/InStock" : "https://schema.org/OutOfStock",
            seller: {
                "@type": "Organization",
                name: "panda wear" // –ú–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É
            }
        }
    };

    return (
        <>
            {/* –í–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö JSON-LD */}
            <script
                type="application/ld+json"
                dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}
            />
            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–¥—É–∫—Ç–∞ */}
            <ProductDetails
                productData={productData}
                // –ü–µ—Ä–µ–¥–∞–µ–º —Å–ª–æ–≥–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –∏—Å–ø–æ–ª—å–∑—É—è categoryName –∏ subcategoryName –∏–∑ params
                parentCategorySlug={categoryName} 
                subcategorySlug={subcategoryName} 
            />
        </>
    );
}